{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\birdk\\\\Desktop\\\\whats-on-my-head\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Lobby from \"./Lobby\";\nimport Game from \"./Game\";\nimport GameOverScreen from \"./GameOverScreen\";\nimport socket from \"./socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [playerData, setPlayerData] = useState({});\n  const [gameOverData, setGameOverData] = useState(null);\n  const [phase, setPhase] = useState(\"menu\");\n  useEffect(() => {\n    const handleReturnToLobby = () => {\n      setGameOverData(null);\n      setPlayerData(prev => ({\n        ...prev\n      }));\n      setPhase(\"lobby\");\n      socket.emit(\"get_players\", {\n        roomCode: playerData.roomCode\n      });\n    };\n    const handleGameStarted = ({\n      players,\n      turnIndex,\n      playerId\n    }) => {\n      setPlayerData(prev => ({\n        ...prev,\n        players,\n        turnIndex,\n        playerId\n      }));\n      setGameOverData(null);\n      setPhase(\"game\");\n    };\n    socket.on(\"return_to_lobby\", handleReturnToLobby);\n    socket.on(\"game_started\", handleGameStarted);\n    return () => {\n      socket.off(\"return_to_lobby\", handleReturnToLobby);\n      socket.off(\"game_started\", handleGameStarted);\n    };\n  }, [playerData.roomCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [phase === \"menu\" && /*#__PURE__*/_jsxDEV(Lobby, {\n      setPhase: setPhase,\n      setPlayerData: setPlayerData,\n      isRejoining: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), phase === \"lobby\" && /*#__PURE__*/_jsxDEV(Lobby, {\n      setPhase: setPhase,\n      setPlayerData: setPlayerData,\n      isRejoining: true,\n      playerData: playerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), phase === \"game\" && /*#__PURE__*/_jsxDEV(Game, {\n      playerData: playerData,\n      setPhase: setPhase,\n      setGameOverData: setGameOverData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), phase === \"gameover\" && /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      data: gameOverData,\n      setGameOverData: setGameOverData,\n      setPhase: setPhase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"29V/qpWxDOEzm8KN++fNNTH3KNA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Lobby","Game","GameOverScreen","socket","jsxDEV","_jsxDEV","App","_s","playerData","setPlayerData","gameOverData","setGameOverData","phase","setPhase","handleReturnToLobby","prev","emit","roomCode","handleGameStarted","players","turnIndex","playerId","on","off","className","children","isRejoining","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/birdk/Desktop/whats-on-my-head/client/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Lobby from \"./Lobby\";\nimport Game from \"./Game\";\nimport GameOverScreen from \"./GameOverScreen\";\nimport socket from \"./socket\";\n\nfunction App() {\n    const [playerData, setPlayerData] = useState({});\n    const [gameOverData, setGameOverData] = useState(null);\n    const [phase, setPhase] = useState(\"menu\");\n\n    useEffect(() => {\n        const handleReturnToLobby = () => {\n            setGameOverData(null); \n            setPlayerData(prev => ({\n                ...prev,\n            }));\n            setPhase(\"lobby\");\n            socket.emit(\"get_players\", { roomCode: playerData.roomCode });\n        };\n\n        const handleGameStarted = ({ players, turnIndex, playerId }) => {\n\n            setPlayerData(prev => ({\n                ...prev,\n                players,\n                turnIndex,\n                playerId\n            }));\n\n            setGameOverData(null);\n            setPhase(\"game\");\n        };\n\n        socket.on(\"return_to_lobby\", handleReturnToLobby);\n        socket.on(\"game_started\", handleGameStarted);\n\n        return () => {\n            socket.off(\"return_to_lobby\", handleReturnToLobby);\n            socket.off(\"game_started\", handleGameStarted);\n        };\n    }, [playerData.roomCode]);\n\n    return (\n        <div className=\"app\">\n            {phase === \"menu\" && (\n                <Lobby setPhase={setPhase} setPlayerData={setPlayerData} isRejoining={false} />\n            )}\n            {phase === \"lobby\" && (\n                <Lobby setPhase={setPhase} setPlayerData={setPlayerData} isRejoining={true} playerData={playerData} />\n            )}\n            {phase === \"game\" && (\n                <Game playerData={playerData} setPhase={setPhase} setGameOverData={setGameOverData} />\n            )}\n            {phase === \"gameover\" && (\n                <GameOverScreen\n                    data={gameOverData}\n                    setGameOverData={setGameOverData}\n                    setPhase={setPhase}\n                />\n            )}\n        </div>\n    );\n\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}