{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\birdk\\\\Desktop\\\\whats-on-my-head\\\\client\\\\src\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  playerData\n}) {\n  _s();\n  const [players, setPlayers] = useState(playerData.players || []);\n  const [guess, setGuess] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [hasGuessed, setHasGuessed] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isTurn, setIsTurn] = useState(false);\n  const yourPlayerId = playerData.playerId;\n  useEffect(() => {\n    const handleGameStarted = ({\n      players,\n      isTurn\n    }) => {\n      setPlayers(players);\n      setFeedback(\"\");\n      setGuess(\"\");\n      setHasGuessed(false);\n      setIsTurn(isTurn);\n    };\n    const handleNewRound = ({\n      players,\n      message,\n      isTurn\n    }) => {\n      setPlayers(players);\n      setFeedback(\"\");\n      setGuess(\"\");\n      setHasGuessed(false);\n      setIsTurn(isTurn);\n    };\n    const handleGuessResult = ({\n      correct,\n      points\n    }) => {\n      if (correct) {\n        setFeedback(\"‚úÖ Correct! You earned points!\");\n        setScore(points);\n      } else {\n        setFeedback(\"‚ùå Not quite. Try again next round.\");\n      }\n      setHasGuessed(true);\n    };\n    const handleTurnUpdated = ({\n      isTurn\n    }) => {\n      setIsTurn(isTurn);\n    };\n    socket.on(\"game_started\", handleGameStarted);\n    socket.on(\"new_round\", handleNewRound);\n    socket.on(\"guess_result\", handleGuessResult);\n    socket.on(\"turn_updated\", handleTurnUpdated);\n    return () => {\n      socket.off(\"game_started\", handleGameStarted);\n      socket.off(\"new_round\", handleNewRound);\n      socket.off(\"guess_result\", handleGuessResult);\n      socket.off(\"turn_updated\", handleTurnUpdated);\n    };\n  }, []);\n  const handleGuess = () => {\n    if (!guess.trim() || hasGuessed) return;\n    socket.emit(\"submit_guess\", {\n      roomCode: playerData.roomCode,\n      playerId: yourPlayerId,\n      guess\n    });\n  };\n  const handlePassTurn = () => {\n    socket.emit(\"pass_turn\", {\n      roomCode: playerData.roomCode\n    });\n  };\n  console.log(\"üéØ Your ID:\", yourPlayerId);\n  console.log(\"üß† isTurn:\", isTurn);\n  console.log(\"ü§î hasGuessed:\", hasGuessed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guess What's on Your Head!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-list\",\n      children: players.map((p, i) => {\n        var _p$score;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [p.name, \" \\u2192 \", p.item, \" \", p.item === \"???\" ? \"(You!)\" : \"\", \" | \\uD83C\\uDFC6 \", (_p$score = p.score) !== null && _p$score !== void 0 ? _p$score : 0]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), true && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter your guess\",\n        value: guess,\n        onChange: e => setGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePassTurn,\n        children: \"Pass Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"jlH1bDVOtpLTYeHbXkELiH6Ju0M=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","playerData","_s","players","setPlayers","guess","setGuess","feedback","setFeedback","hasGuessed","setHasGuessed","score","setScore","isTurn","setIsTurn","yourPlayerId","playerId","handleGameStarted","handleNewRound","message","handleGuessResult","correct","points","handleTurnUpdated","on","off","handleGuess","trim","emit","roomCode","handlePassTurn","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","i","_p$score","name","item","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/birdk/Desktop/whats-on-my-head/client/src/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socket from \"./socket\";\r\n\r\nfunction Game({ playerData }) {\r\n    const [players, setPlayers] = useState(playerData.players || []);\r\n    const [guess, setGuess] = useState(\"\");\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [hasGuessed, setHasGuessed] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [isTurn, setIsTurn] = useState(false);\r\n\r\n    const yourPlayerId = playerData.playerId;\r\n\r\n    useEffect(() => {\r\n        const handleGameStarted = ({ players, isTurn }) => {\r\n            setPlayers(players);\r\n            setFeedback(\"\");\r\n            setGuess(\"\");\r\n            setHasGuessed(false);\r\n            setIsTurn(isTurn);\r\n        };\r\n\r\n        const handleNewRound = ({ players, message, isTurn }) => {\r\n            setPlayers(players);\r\n            setFeedback(\"\");\r\n            setGuess(\"\");\r\n            setHasGuessed(false);\r\n            setIsTurn(isTurn);\r\n        };\r\n\r\n        const handleGuessResult = ({ correct, points }) => {\r\n            if (correct) {\r\n                setFeedback(\"‚úÖ Correct! You earned points!\");\r\n                setScore(points);\r\n            } else {\r\n                setFeedback(\"‚ùå Not quite. Try again next round.\");\r\n            }\r\n            setHasGuessed(true);\r\n        };\r\n\r\n        const handleTurnUpdated = ({ isTurn }) => {\r\n            setIsTurn(isTurn);\r\n        };\r\n\r\n\r\n        socket.on(\"game_started\", handleGameStarted);\r\n        socket.on(\"new_round\", handleNewRound);\r\n        socket.on(\"guess_result\", handleGuessResult);\r\n        socket.on(\"turn_updated\", handleTurnUpdated);\r\n        return () => {\r\n            socket.off(\"game_started\", handleGameStarted);\r\n            socket.off(\"new_round\", handleNewRound);\r\n            socket.off(\"guess_result\", handleGuessResult);\r\n            socket.off(\"turn_updated\", handleTurnUpdated);\r\n        };\r\n    }, []);\r\n\r\n    const handleGuess = () => {\r\n        if (!guess.trim() || hasGuessed) return;\r\n        socket.emit(\"submit_guess\", {\r\n            roomCode: playerData.roomCode,\r\n            playerId: yourPlayerId,\r\n            guess\r\n        });\r\n    };\r\n\r\n    const handlePassTurn = () => {\r\n        socket.emit(\"pass_turn\", { roomCode: playerData.roomCode });\r\n    };\r\n    console.log(\"üéØ Your ID:\", yourPlayerId);\r\n    console.log(\"üß† isTurn:\", isTurn);\r\n    console.log(\"ü§î hasGuessed:\", hasGuessed);\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <h1>Guess What's on Your Head!</h1>\r\n\r\n            <div className=\"player-list\">\r\n                {players.map((p, i) => (\r\n                    <div key={i} className=\"player\">\r\n                        {p.name} ‚Üí {p.item} {p.item === \"???\" ? \"(You!)\" : \"\"} | üèÜ {p.score ?? 0}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {true && (\r\n                <>\r\n                    <input\r\n                        placeholder=\"Enter your guess\"\r\n                        value={guess}\r\n                        onChange={(e) => setGuess(e.target.value)}\r\n                    />\r\n                    <button onClick={handleGuess}>Submit Guess</button>\r\n                    <button onClick={handlePassTurn}>Pass Turn</button>\r\n                </>\r\n            )}\r\n\r\n            {feedback && <p>{feedback}</p>}\r\n            <p>Your current score: {score}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}