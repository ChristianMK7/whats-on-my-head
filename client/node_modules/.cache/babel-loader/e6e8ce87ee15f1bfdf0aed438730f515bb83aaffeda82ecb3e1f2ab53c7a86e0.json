{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\birdk\\\\Desktop\\\\whats-on-my-head\\\\client\\\\src\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socket from \"./socket\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  playerData\n}) {\n  _s();\n  var _players$find, _players$playerData$t;\n  const [players, setPlayers] = useState(playerData.players || []);\n  const [guess, setGuess] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [hasGuessed, setHasGuessed] = useState(false);\n  const [score, setScore] = useState(0);\n  const yourPlayerId = playerData.playerId;\n  useEffect(() => {\n    const handleGameStarted = ({\n      players,\n      turnIndex\n    }) => {\n      setPlayers(players);\n      setFeedback(\"\");\n      setGuess(\"\");\n      setHasGuessed(false);\n      setScore(0);\n      setPlayerData(prev => ({\n        ...prev,\n        turnIndex\n      }));\n    };\n    const handleNewRound = ({\n      players,\n      message,\n      turnIndex\n    }) => {\n      setPlayers(players);\n      setFeedback(\"\");\n      setGuess(\"\");\n      setHasGuessed(false);\n      setPlayerData(prev => ({\n        ...prev,\n        turnIndex\n      }));\n    };\n    const handleGuessResult = ({\n      correct,\n      points\n    }) => {\n      if (correct) {\n        setFeedback(\"✅ Correct! You earned points!\");\n        setScore(points);\n      } else {\n        setFeedback(\"❌ Not quite. Try again next round.\");\n      }\n      setHasGuessed(true);\n    };\n    socket.on(\"turn_updated\", ({\n      turnIndex\n    }) => {\n      setPlayerData(prev => ({\n        ...prev,\n        turnIndex\n      }));\n    });\n    socket.on(\"game_started\", handleGameStarted);\n    socket.on(\"new_round\", handleNewRound);\n    socket.on(\"guess_result\", handleGuessResult);\n    return () => {\n      socket.off(\"game_started\", handleGameStarted);\n      socket.off(\"new_round\", handleNewRound);\n      socket.off(\"guess_result\", handleGuessResult);\n      socket.off(\"turn_updated\");\n    };\n  }, []);\n  const handleGuess = () => {\n    if (!guess.trim() || hasGuessed) return;\n    socket.emit(\"submit_guess\", {\n      roomCode: playerData.roomCode,\n      playerId: yourPlayerId,\n      guess\n    });\n  };\n  const handlePassTurn = () => {\n    socket.emit(\"pass_turn\", {\n      roomCode: playerData.roomCode\n    });\n  };\n  const currentTurnPlayer = players[playerData.turnIndex];\n  const isMyTurn = (currentTurnPlayer === null || currentTurnPlayer === void 0 ? void 0 : currentTurnPlayer.name) === ((_players$find = players.find(p => p.item === \"???\")) === null || _players$find === void 0 ? void 0 : _players$find.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guess What's on Your Head!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: \"20px\",\n        color: isMyTurn ? \"#0f0\" : \"#fff\"\n      },\n      children: [\"\\uD83C\\uDFAF \", isMyTurn ? \"It's your turn!\" : `Waiting for ${(_players$playerData$t = players[playerData.turnIndex]) === null || _players$playerData$t === void 0 ? void 0 : _players$playerData$t.name}...`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-list\",\n      children: players.map((p, i) => {\n        var _p$score;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          style: {\n            fontWeight: i === playerData.turnIndex ? \"bold\" : \"normal\",\n            color: i === playerData.turnIndex ? \"#0f0\" : \"#fff\"\n          },\n          children: [p.name, \" \\u2192 \", p.item, \" \", p.item === \"???\" ? \"(You!)\" : \"\", \" | \\uD83C\\uDFC6 \", (_p$score = p.score) !== null && _p$score !== void 0 ? _p$score : 0]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), isMyTurn && !hasGuessed && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter your guess\",\n        value: guess,\n        onChange: e => setGuess(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePassTurn,\n        children: \"Pass Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"akqEXjBv6/BYt141fNRkF3yblQ8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","playerData","_s","_players$find","_players$playerData$t","players","setPlayers","guess","setGuess","feedback","setFeedback","hasGuessed","setHasGuessed","score","setScore","yourPlayerId","playerId","handleGameStarted","turnIndex","setPlayerData","prev","handleNewRound","message","handleGuessResult","correct","points","on","off","handleGuess","trim","emit","roomCode","handlePassTurn","currentTurnPlayer","isMyTurn","name","find","p","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","color","map","i","_p$score","fontWeight","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/birdk/Desktop/whats-on-my-head/client/src/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socket from \"./socket\";\r\n\r\nfunction Game({ playerData }) {\r\n    const [players, setPlayers] = useState(playerData.players || []);\r\n    const [guess, setGuess] = useState(\"\");\r\n    const [feedback, setFeedback] = useState(\"\");\r\n    const [hasGuessed, setHasGuessed] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n\r\n    const yourPlayerId = playerData.playerId;\r\n\r\n    useEffect(() => {\r\n        const handleGameStarted = ({ players, turnIndex }) => {\r\n            setPlayers(players);\r\n            setFeedback(\"\");\r\n            setGuess(\"\");\r\n            setHasGuessed(false);\r\n            setScore(0);\r\n            setPlayerData(prev => ({ ...prev, turnIndex }));\r\n        };\r\n\r\n        const handleNewRound = ({ players, message, turnIndex }) => {\r\n            setPlayers(players);\r\n            setFeedback(\"\");\r\n            setGuess(\"\");\r\n            setHasGuessed(false);\r\n            setPlayerData(prev => ({ ...prev, turnIndex }));\r\n        };\r\n\r\n\r\n        const handleGuessResult = ({ correct, points }) => {\r\n            if (correct) {\r\n                setFeedback(\"✅ Correct! You earned points!\");\r\n                setScore(points);\r\n            } else {\r\n                setFeedback(\"❌ Not quite. Try again next round.\");\r\n            }\r\n            setHasGuessed(true);\r\n        };\r\n        socket.on(\"turn_updated\", ({ turnIndex }) => {\r\n            setPlayerData(prev => ({ ...prev, turnIndex }));\r\n        });\r\n\r\n        socket.on(\"game_started\", handleGameStarted);\r\n        socket.on(\"new_round\", handleNewRound);\r\n        socket.on(\"guess_result\", handleGuessResult);\r\n        return () => {\r\n            socket.off(\"game_started\", handleGameStarted);\r\n            socket.off(\"new_round\", handleNewRound);\r\n            socket.off(\"guess_result\", handleGuessResult);\r\n            socket.off(\"turn_updated\");\r\n        };\r\n\r\n    }, []);\r\n\r\n    const handleGuess = () => {\r\n        if (!guess.trim() || hasGuessed) return;\r\n        socket.emit(\"submit_guess\", {\r\n            roomCode: playerData.roomCode,\r\n            playerId: yourPlayerId,\r\n            guess\r\n        });\r\n    };\r\n\r\n    const handlePassTurn = () => {\r\n        socket.emit(\"pass_turn\", { roomCode: playerData.roomCode });\r\n    };\r\n    const currentTurnPlayer = players[playerData.turnIndex];\r\n    const isMyTurn = currentTurnPlayer?.name === players.find(p => p.item === \"???\")?.name;\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <h1>Guess What's on Your Head!</h1>\r\n\r\n            <h3 style={{ marginBottom: \"20px\", color: isMyTurn ? \"#0f0\" : \"#fff\" }}>\r\n                🎯 {isMyTurn\r\n                    ? \"It's your turn!\"\r\n                    : `Waiting for ${players[playerData.turnIndex]?.name}...`}\r\n            </h3>\r\n\r\n            <div className=\"player-list\">\r\n                {players.map((p, i) => (\r\n                    <div\r\n                        key={i}\r\n                        className=\"player\"\r\n                        style={{\r\n                            fontWeight: i === playerData.turnIndex ? \"bold\" : \"normal\",\r\n                            color: i === playerData.turnIndex ? \"#0f0\" : \"#fff\",\r\n                        }}\r\n                    >\r\n                        {p.name} → {p.item} {p.item === \"???\" ? \"(You!)\" : \"\"} | 🏆 {p.score ?? 0}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {isMyTurn && !hasGuessed && (\r\n                <>\r\n                    <input\r\n                        placeholder=\"Enter your guess\"\r\n                        value={guess}\r\n                        onChange={(e) => setGuess(e.target.value)}\r\n                    />\r\n                    <button onClick={handleGuess}>Submit Guess</button>\r\n                    <button onClick={handlePassTurn}>Pass Turn</button>\r\n                </>\r\n            )}\r\n\r\n            {feedback && <p>{feedback}</p>}\r\n            <p>Your current score: {score}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}